// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PoolMetadataUpdated extends ethereum.Event {
  get params(): PoolMetadataUpdated__Params {
    return new PoolMetadataUpdated__Params(this);
  }
}

export class PoolMetadataUpdated__Params {
  _event: PoolMetadataUpdated;

  constructor(event: PoolMetadataUpdated) {
    this._event = event;
  }

  get poolId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get metadataCID(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class PoolMetadataRegistry extends ethereum.SmartContract {
  static bind(address: Address): PoolMetadataRegistry {
    return new PoolMetadataRegistry("PoolMetadataRegistry", address);
  }

  _isPoolOwner(poolId: Bytes): boolean {
    let result = super.call("_isPoolOwner", "_isPoolOwner(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(poolId)
    ]);

    return result[0].toBoolean();
  }

  try__isPoolOwner(poolId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall("_isPoolOwner", "_isPoolOwner(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(poolId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolIdMetadataCIDMap(param0: Bytes): string {
    let result = super.call(
      "poolIdMetadataCIDMap",
      "poolIdMetadataCIDMap(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toString();
  }

  try_poolIdMetadataCIDMap(param0: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall(
      "poolIdMetadataCIDMap",
      "poolIdMetadataCIDMap(bytes32):(string)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetPoolMetadataCall extends ethereum.Call {
  get inputs(): SetPoolMetadataCall__Inputs {
    return new SetPoolMetadataCall__Inputs(this);
  }

  get outputs(): SetPoolMetadataCall__Outputs {
    return new SetPoolMetadataCall__Outputs(this);
  }
}

export class SetPoolMetadataCall__Inputs {
  _call: SetPoolMetadataCall;

  constructor(call: SetPoolMetadataCall) {
    this._call = call;
  }

  get poolId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get metadataCID(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetPoolMetadataCall__Outputs {
  _call: SetPoolMetadataCall;

  constructor(call: SetPoolMetadataCall) {
    this._call = call;
  }
}
