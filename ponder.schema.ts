import { createSchema } from "@ponder/core";

export default createSchema((p) => ({
  Order: p.createTable({
    id: p.string(),
    chainId: p.int(),
    blockNumber: p.bigint(),
    blockTimestamp: p.bigint(),
    orderContract: p.hex(),
    user: p.string().references("User.id"),
    decodedSuccess: p.boolean(),
    OrderParametersId: p.string().references("OrderParameters.id").optional(),
    orderParameters: p.one("OrderParametersId"),
  }),
  Token: p.createTable({
    id: p.string(),
    address: p.hex(),
    chainId: p.int(),
    name: p.string(),
    symbol: p.string(),
    decimals: p.int(),
  }),
  User: p.createTable({
    id: p.string(),
    address: p.string(),
    chainId: p.int(),
    orders: p.many("Order.user"),
  }),
  OrderParameters: p.createTable({
    id: p.string(),
    orderId: p.string().references("Order.id"),
    tokenInId: p.string().references("Token.id"),
    tokenIn: p.one("tokenInId"),
    tokenAmountIn: p.bigint(),
    tokenOutId: p.string().references("Token.id"),
    tokenOut: p.one("tokenOutId"),
    tokenAmountOut: p.bigint(),
    appData: p.hex(),
    to: p.hex(),
    isSellOrder: p.boolean(),
    isPartiallyFillable: p.boolean(),
    validityBucketSeconds: p.bigint(),
    sellTokenPriceOracle: p.hex(),
    buyTokenPriceOracle: p.hex(),
    strike: p.bigint(),
    maxTimeSinceLastOracleUpdate: p.bigint(),
  }),
}));
